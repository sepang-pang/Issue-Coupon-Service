name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB }}
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: test properties 파일 생성
        run: |
          cd ./src/test/resources
          touch ./application-test.properties
          echo "${{ secrets.APPLICATION_TEST_PROPERTIES }}" > ./application-test.properties
        shell: bash

      - name: test properties 파일 생성
        run: |
          cd ./src/test/resources
          touch ./application-test.properties
          echo "cloud.aws.credentials.access-key=${{ secrets.ACCESS_KEY }}" >> ./application-test.properties
          echo "cloud.aws.credentials.secret-key=${{ secrets.SECRET_KEY }}" >> ./application-test.properties
          echo "cloud.aws.region.static=${{ secrets.REGION }}" >> ./application-test.properties
          echo "cloud.aws.s3.bucket=${{ secrets.BUCKET_NAME }}" >> ./application-test.properties
          echo "cloud.aws.stack.auto=false" >> ./application-test.properties
        shell: bash

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      # AWS CLI 설정
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.SECRET_KEY }}
          aws configure set region ${{ secrets.REGION }}

      # gradle 실행 허가
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: 어플리케이션 실행 테스트(테스트 코드X)
        run: ./gradlew clean build --exclude-task test

      # Bulid Test
      - name: Build with Gradle
        run: ./gradlew build


      # PR conversation & Action에 몇 개의 테스트 중에 몇 개가 통과 되었는지
      # 어떤 테스트 파일에서 실패했는지 가르쳐 줌.
      - name: 테스트 결과 PR에 코멘트 작성
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/build/test-results/**/*.xml

      # 테스트 파일 내에서 어디에서 테스트가 실패되었는지 가르쳐 줌.
      # Files changed에서 어디에서 잘못되었는지 가르쳐준다.
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

